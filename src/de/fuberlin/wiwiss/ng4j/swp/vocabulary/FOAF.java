package de.fuberlin.wiwiss.ng4j.swp.vocabulary;

import com.hp.hpl.jena.rdf.model.*;
import com.hp.hpl.jena.graph.Node;
 
/**
 * Vocabulary definitions from /home/erw01r/workspace/dp/FOAF.owl 
 * @author Auto-generated by schemagen on 10 May 2004 15:35 
 */
public class FOAF {
    /** <p>The RDF model that holds the vocabulary terms</p> */
    private static Model m_model = ModelFactory.createDefaultModel();
    
    /** <p>The namespace of the vocabalary as a string ({@value})</p> */
    public static final String NS = "http://xmlns.com/foaf/0.1/";
    
    /** <p>The namespace of the vocabalary as a string</p>
     *  @see #NS */
    public static String getURI() {return NS;}
    
    /** <p>The namespace of the vocabalary as a resource</p> */
    public static final Resource NAMESPACE = m_model.createResource( NS );
    
    /** <p>A jabber ID for something. A 'bare JID' per http://www.jabber.org/ietf/draft-ietf-xmpp-core-11.html#addressing-node 
     *  TODO: just for account IDs, or resources? chatrooms?</p>
     */
    public static final Property jabberID = m_model.createProperty( "http://xmlns.com/foaf/0.1/jabberID" );
    
    /** <p>A person known by this person (indicating some level of reciprocated interaction 
     *  between the parties).</p>
     */
    public static final Property knows = m_model.createProperty( "http://xmlns.com/foaf/0.1/knows" );
    
    /** <p>A depiction of some thing.</p> */
    public static final Property depiction = m_model.createProperty( "http://xmlns.com/foaf/0.1/depiction" );
    
    /** <p>A homepage for some thing.</p> */
    public static final Property homepage = m_model.createProperty( "http://xmlns.com/foaf/0.1/homepage" );
    
    /** <p>A derived thumbnail image.</p> */
    public static final Property thumbnail = m_model.createProperty( "http://xmlns.com/foaf/0.1/thumbnail" );
    
    /** <p>A homepage of a school attended by the person.</p> */
    public static final Property schoolHomepage = m_model.createProperty( "http://xmlns.com/foaf/0.1/schoolHomepage" );
    
    /** <p>A fully qualified international phone number, specified using the tel: URL 
     *  scheme (refs: http://www.w3.org/Addressing/schemes.html#tel).</p>
     */
    public static final Property phone = m_model.createProperty( "http://xmlns.com/foaf/0.1/phone" );
    
    /** <p>A location that something is based near, for some broadly human notion of 
     *  near.</p>
     */
    public static final Property based_near = m_model.createProperty( "http://xmlns.com/foaf/0.1/based_near" );
    
    /** <p>A textual geekcode for this person, see http://www.geekcode.com/geek.html</p> */
    public static final Property geekcode = m_model.createProperty( "http://xmlns.com/foaf/0.1/geekcode" );
    
    /** <p>A thing of interest to this person.</p> */
    public static final Property topic_interest = m_model.createProperty( "http://xmlns.com/foaf/0.1/topic_interest" );
    
    /** <p>A page about a topic of interest to this person.</p> */
    public static final Property interest = m_model.createProperty( "http://xmlns.com/foaf/0.1/interest" );
    
    /** <p>An agent that made this thing.</p> */
    public static final Property maker = m_model.createProperty( "http://xmlns.com/foaf/0.1/maker" );
    
    /** <p>A thing depicted in this representation.</p> */
    public static final Property depicts = m_model.createProperty( "http://xmlns.com/foaf/0.1/depicts" );
    
    /** <p>The sha1sum of the URI of an Internet mailbox associated with exactly one 
     *  owner, the first owner of the mailbox.</p>
     */
    public static final Property mbox_sha1sum = m_model.createProperty( "http://xmlns.com/foaf/0.1/mbox_sha1sum" );
    
    /** <p>Something that was made by this agent.</p> */
    public static final Property made = m_model.createProperty( "http://xmlns.com/foaf/0.1/made" );
    
    /** <p>The given name of some person.</p> */
    public static final Property givenname = m_model.createProperty( "http://xmlns.com/foaf/0.1/givenname" );
    
    /** <p>A .plan comment, in the tradition of finger and '.plan' files.</p> */
    public static final Property plan = m_model.createProperty( "http://xmlns.com/foaf/0.1/plan" );
    
    /** <p>An image that can be used to represent some thing (ie. those depictions which 
     *  are particularly representative of something, eg. one's photo on a homepage).</p>
     */
    public static final Property img = m_model.createProperty( "http://xmlns.com/foaf/0.1/img" );
    
    /** <p>A logo representing some thing.</p> */
    public static final Property logo = m_model.createProperty( "http://xmlns.com/foaf/0.1/logo" );
    
    /** <p>A weblog of some thing (whether person, group, company etc.).</p> */
    public static final Property weblog = m_model.createProperty( "http://xmlns.com/foaf/0.1/weblog" );
    
    /** <p>Title (Mr, Mrs, Ms, Dr. etc)</p> */
    public static final Property title = m_model.createProperty( "http://xmlns.com/foaf/0.1/title" );
    
    /** <p>A sha1sum hash, in hex.</p> */
    public static final Property sha1 = m_model.createProperty( "http://xmlns.com/foaf/0.1/sha1" );
    
    /** <p>The surname of some person.</p> */
    public static final Property surname = m_model.createProperty( "http://xmlns.com/foaf/0.1/surname" );
    
    /** <p>A work info homepage of some person; a page about their work for some organization.</p> */
    public static final Property workInfoHomepage = m_model.createProperty( "http://xmlns.com/foaf/0.1/workInfoHomepage" );
    
    /** <p>The first name of a person.</p> */
    public static final Property firstName = m_model.createProperty( "http://xmlns.com/foaf/0.1/firstName" );
    
    /** <p>A name for some thing.</p> */
    public static final Property name = m_model.createProperty( "http://xmlns.com/foaf/0.1/name" );
    
    /** <p>A theme.</p> */
    public static final Property theme = m_model.createProperty( "http://xmlns.com/foaf/0.1/theme" );
    
    /** <p>A workplace homepage of some person; the homepage of an organization they 
     *  work for.</p>
     */
    public static final Property workplaceHomepage = m_model.createProperty( "http://xmlns.com/foaf/0.1/workplaceHomepage" );
    
    /** <p>A link to the publications of this person.</p> */
    public static final Property publications = m_model.createProperty( "http://xmlns.com/foaf/0.1/publications" );
    
    /** <p>An AIM chat ID</p> */
    public static final Property aimChatID = m_model.createProperty( "http://xmlns.com/foaf/0.1/aimChatID" );
    
    /** <p>A personal mailbox, ie. an Internet mailbox associated with exactly one owner, 
     *  the first owner of this mailbox. This is a 'static inverse functional property', 
     *  in that there is (across time and change) at most one individual that ever 
     *  has any particular value for foaf:mbox.</p>
     */
    public static final Property mbox = m_model.createProperty( "http://xmlns.com/foaf/0.1/mbox" );

    /** <p>Returns foaf:mbox as a node.</p>
     */
	public static final Node mboxNode = Node.createURI( "http://xmlns.com/foaf/0.1/mbox" );

    /** <p>An organization funding a project or person.</p> */
    public static final Property fundedBy = m_model.createProperty( "http://xmlns.com/foaf/0.1/fundedBy" );
    
    /** <p>A Myers Briggs (MBTI) personality classification.</p> */
    public static final Property myersBriggs = m_model.createProperty( "http://xmlns.com/foaf/0.1/myersBriggs" );
    
    /** <p>A current project this person works on.</p> */
    public static final Property currentProject = m_model.createProperty( "http://xmlns.com/foaf/0.1/currentProject" );
    
    /** <p>A project this person has previously worked on.</p> */
    public static final Property pastProject = m_model.createProperty( "http://xmlns.com/foaf/0.1/pastProject" );
    
    /** <p>A Yahoo chat ID</p> */
    public static final Property yahooChatID = m_model.createProperty( "http://xmlns.com/foaf/0.1/yahooChatID" );
    
    /** <p>A checksum for the DNA of some thing. Joke.</p> */
    public static final Property dnaChecksum = m_model.createProperty( "http://xmlns.com/foaf/0.1/dnaChecksum" );
    
    /** <p>The family_name of some person.</p> */
    public static final Property family_name = m_model.createProperty( "http://xmlns.com/foaf/0.1/family_name" );
    
    /** <p>A page or document about this thing.</p> */
    public static final Property page = m_model.createProperty( "http://xmlns.com/foaf/0.1/page" );
    
    /** <p>An MSN chat ID</p> */
    public static final Property msnChatID = m_model.createProperty( "http://xmlns.com/foaf/0.1/msnChatID" );
    
    /** <p>A topic of some page or document.</p> */
    public static final Property topic = m_model.createProperty( "http://xmlns.com/foaf/0.1/topic" );
    
    /** <p>An ICQ chat ID</p> */
    public static final Property icqChatID = m_model.createProperty( "http://xmlns.com/foaf/0.1/icqChatID" );
    
    /** <p>A short informal nickname characterising an agent (includes login identifiers, 
     *  IRC and other chat nicknames).</p>
     */
    public static final Property nick = m_model.createProperty( "http://xmlns.com/foaf/0.1/nick" );
    
    /** <p>An organization.</p> */
    public static final Resource Organization = m_model.createResource( "http://xmlns.com/foaf/0.1/Organization" );
    
    /** <p>An image.</p> */
    public static final Resource Image = m_model.createResource( "http://xmlns.com/foaf/0.1/Image" );
    
    /** <p>A document.</p> */
    public static final Resource Document = m_model.createResource( "http://xmlns.com/foaf/0.1/Document" );
    
    /** <p>An agent (eg. person, group, software or physical artifact).</p> */
    public static final Resource Agent = m_model.createResource( "http://xmlns.com/foaf/0.1/Agent" );
    
    /** <p>A project.</p> */
    public static final Resource Project = m_model.createResource( "http://xmlns.com/foaf/0.1/Project" );
    
    /** <p>A person.</p> */
    public static final Resource Person = m_model.createResource( "http://xmlns.com/foaf/0.1/Person" );
    
    /** <p>A group.</p> */
    public static final Resource Group = m_model.createResource( "http://xmlns.com/foaf/0.1/Group" );
    
}

/*
 *  (c)   Copyright 2004 - 2010 Rowland Watkins (rowland@grid.cx) & University of 
 * 		  Southampton, Declarative Systems and Software Engineering Research 
 *        Group, University of Southampton, Highfield, SO17 1BJ
 *   	  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */
