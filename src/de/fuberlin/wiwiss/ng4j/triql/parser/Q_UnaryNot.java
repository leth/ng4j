/*
 * (c) Copyright 2001, 2002, 2003, Hewlett-Packard Development Company, LP
 * [See end of file]
 */

/* Generated By:JJTree: Do not edit this line. Q_UnaryNot.java */

package de.fuberlin.wiwiss.ng4j.triql.parser;

import java.io.PrintWriter;

import com.hp.hpl.jena.rdql.EvalTypeException;
import com.hp.hpl.jena.rdql.Query;
import com.hp.hpl.jena.rdql.QueryException;
import com.hp.hpl.jena.rdql.QueryPrintUtils;
import com.hp.hpl.jena.rdql.ResultBinding;
import com.hp.hpl.jena.rdql.Settable;
import com.hp.hpl.jena.rdql.Value;
import com.hp.hpl.jena.rdql.WorkingVar;

public class Q_UnaryNot extends SimpleNode implements Expr, ExprBoolean {
    private String printName = "unaryminus" ;
    private String opSymbol = "!" ;
    Expr expr ;

  Q_UnaryNot(int id) {
    super(id);
  }

  Q_UnaryNot(TriQLParser p, int id) {
    super(p, id);
  }

   public void jjtClose()
   {
        int n = jjtGetNumChildren() ;
        if ( n != 1 )
            throw new QueryException("Q_UnaryNot: Wrong number of children: "+n) ;
        expr = (Expr)jjtGetChild(0) ;
    }


  public Value eval(Query q, ResultBinding env)
  {
    Value v = expr.eval(q, env) ;

    if ( ! v.isBoolean() )
        throw new EvalTypeException("Q_UnaryNot: Wanted a number: got "+expr) ;

    Settable result ;

    /* Further work needed : what is a variable name
     * bound to so that it does not get over written?
    if ( v instanceof Settable )
        result = (Settable)v ;
    else
    */
    result = new WorkingVar() ;

    result.setBoolean(! v.getBoolean() ) ;

    return result ;
    }

    public String asInfixString() { return QueryPrintUtils.asInfixString1(expr, printName, opSymbol) ; }

    public String asPrefixString() { return QueryPrintUtils.asPrefixString(expr, null, printName, opSymbol) ; }

    public void print(PrintWriter pw, int level) { QueryPrintUtils.print(pw, expr, null, printName, opSymbol, level) ; }

    public String toString() { return asInfixString() ; }

}

/*
 *  (c) Copyright 2001, 2002, 2003 Hewlett-Packard Development Company, LP
 *  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
