/*
 * (c) Copyright 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008 Hewlett-Packard Development Company, LP
 * [See end of file]
 */

/* Generated By:JJTree: Do not edit this line. Q_Var.java */

package de.fuberlin.wiwiss.ng4j.triql.parser;

import java.io.PrintWriter;

import com.hp.hpl.jena.query.Query;
import com.hp.hpl.jena.query.QueryException;
import com.hp.hpl.jena.sparql.util.IndentedWriter;

import de.fuberlin.wiwiss.ng4j.triql.ResultBinding;
import de.fuberlin.wiwiss.ng4j.triql.legacy.QueryPrintUtils;
import de.fuberlin.wiwiss.ng4j.triql.legacy.Value;
import de.fuberlin.wiwiss.ng4j.triql.legacy.Var;
import de.fuberlin.wiwiss.ng4j.triql.legacy.WorkingVar;

public class Q_Var extends SimpleNode implements Var, Expr
{
    String varName ;

    public Q_Var(int id) { super(id); }
    public Q_Var(TriQLParser p, int id) { super(p, id); }

    public void jjtClose()
    {
        if ( jjtGetNumChildren() != 1 )
            throw new QueryException("Q_Var: expected 1 child: got "+jjtGetNumChildren()) ;
        varName = ((Q_Identifier)jjtGetChild(0)).id ;
    }

    public String getVarName() { return varName ; }
    public void setVarName(String vn) { varName = vn ; }

    public Value eval(Query q, ResultBinding env)
    {
        // Result is a copy as a bound variable.
        Value v = env.getValue(varName) ;
        WorkingVar v2 = new WorkingVar(v) ;
        return v2 ;
        //v2.setString(v.getString());
        //return v2 ;
    }

    public String toString() { return "?"+varName ; }

    public String asInfixString() { return toString() ; }
    public String asPrefixString() { return toString() ; }

    // Print prefix notation (multiline) for debugging
    public void print(PrintWriter pw, int level)
    {
        QueryPrintUtils.indent(pw, level) ;
        pw.println(this.asPrefixString()) ;
    }

	/* (non-Javadoc)
	 * @see com.hp.hpl.jena.sparql.lang.rdql.PrintableRDQL#format(com.hp.hpl.jena.sparql.util.IndentedWriter)
	 */
	public void format(IndentedWriter arg0) {
		// FIXME (Update to Jena 2.5.6) Implement inherited method: com.hp.hpl.jena.sparql.lang.rdql.PrintableRDQL#format
		
	}

}

/*
 * (c) Copyright 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008 Hewlett-Packard Development Company, LP
 *  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
