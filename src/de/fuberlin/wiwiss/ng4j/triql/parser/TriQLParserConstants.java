/* Generated By:JJTree&JavaCC: Do not edit this line. TriQLParserConstants.java */
/*
 * (c) Copyright 2001-2008 Hewlett-Packard Development Company, LP
 */

package de.fuberlin.wiwiss.ng4j.triql.parser ;

public interface TriQLParserConstants {

  int EOF = 0;
  int SINGLE_LINE_COMMENT = 13;
  int MULTI_LINE_COMMENT = 14;
  int INTEGER_LITERAL = 16;
  int DECIMAL_LITERAL = 17;
  int HEX_LITERAL = 18;
  int FLOATING_POINT_LITERAL = 19;
  int EXPONENT = 20;
  int STRING_LITERAL1 = 21;
  int STRING_LITERAL2 = 22;
  int URI = 23;
  int QNAME = 24;
  int QNAME_PREFIX = 25;
  int QNAME_LNAME = 26;
  int SELECT = 27;
  int SOURCE = 28;
  int FROM = 29;
  int WHERE = 30;
  int SUCHTHAT = 31;
  int PREFIXES = 32;
  int FOR = 33;
  int STR_EQ = 34;
  int STR_NE = 35;
  int COUNT = 36;
  int BOOLEAN_LITERAL = 37;
  int NULL_LITERAL = 38;
  int DIGITS = 39;
  int NCName = 40;
  int LPAREN = 41;
  int RPAREN = 42;
  int LBRACE = 43;
  int RBRACE = 44;
  int LBRACKET = 45;
  int RBRACKET = 46;
  int SEMICOLON = 47;
  int COMMA = 48;
  int DOT = 49;
  int ASSIGN = 50;
  int GT = 51;
  int LT = 52;
  int BANG = 53;
  int TILDE = 54;
  int HOOK = 55;
  int COLON = 56;
  int EQ = 57;
  int NEQ = 58;
  int LE = 59;
  int GE = 60;
  int SC_OR = 61;
  int SC_AND = 62;
  int INCR = 63;
  int DECR = 64;
  int PLUS = 65;
  int MINUS = 66;
  int STAR = 67;
  int SLASH = 68;
  int BIT_AND = 69;
  int BIT_OR = 70;
  int BIT_XOR = 71;
  int REM = 72;
  int LSHIFT = 73;
  int RSIGNEDSHIFT = 74;
  int RUNSIGNEDSHIFT = 75;
  int STR_MATCH = 76;
  int STR_NMATCH = 77;
  int DATATYPE = 78;
  int AT = 79;
  int PATTERN = 80;

  int DEFAULT = 0;
  int READ_IDENTIFIER = 1;
  int IN_SINGLE_LINE_COMMENT = 2;
  int IN_MULTI_LINE_COMMENT = 3;
  int READ_URI = 4;
  int READ_QNAME = 5;
  int READ_REGEX = 6;

  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "\"//\"",
    "\"/*\"",
    "<SINGLE_LINE_COMMENT>",
    "\"*/\"",
    "<token of kind 15>",
    "<INTEGER_LITERAL>",
    "<DECIMAL_LITERAL>",
    "<HEX_LITERAL>",
    "<FLOATING_POINT_LITERAL>",
    "<EXPONENT>",
    "<STRING_LITERAL1>",
    "<STRING_LITERAL2>",
    "<URI>",
    "<QNAME>",
    "<QNAME_PREFIX>",
    "<QNAME_LNAME>",
    "\"select\"",
    "\"source\"",
    "\"from\"",
    "\"where\"",
    "\"and\"",
    "\"using\"",
    "\"for\"",
    "\"eq\"",
    "\"ne\"",
    "\"count\"",
    "<BOOLEAN_LITERAL>",
    "\"null\"",
    "<DIGITS>",
    "<NCName>",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\",\"",
    "\".\"",
    "\"=\"",
    "\">\"",
    "\"<\"",
    "\"!\"",
    "\"~\"",
    "\"?\"",
    "\":\"",
    "\"==\"",
    "\"!=\"",
    "\"<=\"",
    "\">=\"",
    "\"||\"",
    "\"&&\"",
    "\"++\"",
    "\"--\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"&\"",
    "\"|\"",
    "\"^\"",
    "\"%\"",
    "\"<<\"",
    "\">>\"",
    "\">>>\"",
    "<STR_MATCH>",
    "\"!~\"",
    "\"^^\"",
    "\"@\"",
    "<PATTERN>",
  };

}
