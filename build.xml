<?xml version="1.0" encoding="utf-8"?>

<project name="namedgraphs" default="all" basedir=".">

	<property name="project" value="ng4j"/>
    <property name="project.package" value="de.fuberlin.wiwiss.namedgraphs"/>
	<property name="project.path" value="de/fuberlin/wiwiss/namedgraphs"/>
	<property name="src" value="src"/>
	<property name="src.tests" value="tests"/>
	<property name="build" value="bin"/>
	<property name="build.tests" value="bin-tests"/>
<!--	<property name="dist" value="dist"/>-->
	<property name="lib" value="lib"/>
	<property name="doc" value="doc"/>
   
	<path id="project.class.path">
		<pathelement path="${java.class.path}"/>
		<fileset dir="${lib}">
			<include name="**/*.jar"/>
            <exclude name="junit.jar"/>
		</fileset>
	</path>
	
	<target name="help">
		<echo>
	Usage:

	ant help    	- shows this message
	ant compile 	- compiles the java files
	ant test		- runs JUnit tests
	ant javadoc 	- creates javadoc documentation
<!--	ant dist    	- creates jar file
	ant release 	- creates a release .zip file-->
    ant all         - all of the above
	ant clean   	- cleans everything created by the build process
		</echo>
	</target>
	
	<target name="clean">
		<!-- Delete all directory trees created by the build process -->
		<delete dir="${build}" failonerror="false"/>
		<delete dir="${build.tests}" failonerror="false"/>
<!--		<delete dir="${project}" failonerror="false"/>
		<delete dir="${dist}" failonerror="false"/>-->
		<delete dir="${doc}" failonerror="false"/>
	</target>
	
	<target name="init">
		<!-- Create the time stamp -->
		<tstamp/>
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}"/>
	</target>
	
	<target name="compile" depends="init" description="compiles ${project}">
		<!-- Compile the java code from ${src} into ${build} -->
		<javac srcdir="${src}" destdir="${build}" debug="on">
			<classpath refid="project.class.path"/>
		</javac>
	</target>
	
	<target name="copyfiles" depends="init">
		<!-- Copies non-class files from source directory to
		     build directory -->
		<copy todir="${build}/">
			<fileset dir="${src}/">
				<include name="{$project.path}/trix/*.xsd"/>
			</fileset>
		</copy>
	</target>

	<target name="init.tests">
		<!-- Creates the build directory for unit tests -->
		<mkdir dir="${build.tests}"/>
	</target>

	<target name="compile.tests" depends="init.tests,compile"
			description="compiles the unit tests">
		<!-- Compile the unit tests from ${src.tests} into ${build.tests} -->
		<javac srcdir="${src.tests}" destdir="${build.tests}" debug="on">
			<classpath>
				<path refid="project.class.path"/>
				<pathelement path="${build}"/>
                <pathelement path="${lib}/junit.jar"/>
			</classpath>
		</javac>
	</target>
			
	<target name="copyfiles.tests" depends="init">
		<!-- Copies non-class files from test source directory to
		     test build directory -->
		<copy todir="${build}/">
			<fileset dir="${src}/">
				<include name="{$project.path}/trix/tests/*"/>
			</fileset>
		</copy>
	</target>
	
	<target name="test" depends="compile.tests,copyfiles,copyfiles.tests">
		<!-- Runs JUnit tests using the text-only TestRunner -->
		<java classname="junit.textui.TestRunner" fork="yes" failonerror="true">
			<arg value="${project.package}.AllTests"/>
			<classpath>
				<path refid="project.class.path"/>
				<pathelement path="${build}"/>
				<pathelement path="${build.tests}"/>
                <pathelement path="${lib}/junit.jar"/>
			</classpath>
		</java>
	</target>
	
<!--	<target name="dist" depends="compile,copyconfig">
		<!- Creates an executable jar file for the project ->
		<unjar src="${lib}/jfreechart.jar" dest="${build}" />
		<mkdir dir="${dist}"/>
		<jar jarfile="${dist}/${project}.jar" basedir="${build}">
			<manifest>
				<attribute name="Main-Class" value="net.sf.${project}.Main"/>
				<attribute name="Class-Path" value="jcommon-0.6.4.jar jfreechart-0.9.2.jar"/>
			</manifest>
		</jar>
	</target>-->
	
<!--
	<target name="copylibs" depends="init">
		<copy todir="${dist}">
		    <fileset dir="${lib}">
				<include name="**/*.jar"/>
			</fileset>
	    </copy>
	</target>
	
	<target name="release" depends="dist">
		<!- Creates a release zip file ->
		<mkdir dir="${project}"/>
		<copy file="LICENSE" todir="${project}"/>
		<copy file="README" todir="${project}"/>
		<copy file="${dist}/${project}.jar" todir="${project}"/>
		<zip zipfile="${dist}/release.zip" basedir="${project}"/>
	</target>-->
	
	<target name="javadoc">
		<!-- Creates javadoc documentation for the source
             (but not for the tests) -->
		<delete dir="${doc}"/>
		<mkdir dir="${doc}"/>
		<javadoc packagenames="*"
				sourcepath="${src}"
				classpathref="project.class.path"
				destdir="${doc}"
				author="true"
				version="true"
				private="false"
				use="true"
				splitindex="true"
				windowtitle="${project}"
				doctitle="${project}">
            <link href="http://jena.sourceforge.net/javadoc/"/>
            <link href="http://java.sun.com/j2se/1.4.2/docs/api/"/>
		</javadoc>
	</target>

    <target name="all" depends="test,javadoc"/>
</project>
